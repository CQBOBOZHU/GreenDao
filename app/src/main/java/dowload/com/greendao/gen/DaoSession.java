package dowload.com.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import dowload.com.greendao.UserBean;
import dowload.com.greendao.StudentBean;
import dowload.com.greendao.TeacherBean;
import dowload.com.greendao.ManBean;
import dowload.com.greendao.WomenBean;
import dowload.com.greendao.MaBean;

import dowload.com.greendao.gen.UserBeanDao;
import dowload.com.greendao.gen.StudentBeanDao;
import dowload.com.greendao.gen.TeacherBeanDao;
import dowload.com.greendao.gen.ManBeanDao;
import dowload.com.greendao.gen.WomenBeanDao;
import dowload.com.greendao.gen.MaBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig studentBeanDaoConfig;
    private final DaoConfig teacherBeanDaoConfig;
    private final DaoConfig manBeanDaoConfig;
    private final DaoConfig womenBeanDaoConfig;
    private final DaoConfig maBeanDaoConfig;

    private final UserBeanDao userBeanDao;
    private final StudentBeanDao studentBeanDao;
    private final TeacherBeanDao teacherBeanDao;
    private final ManBeanDao manBeanDao;
    private final WomenBeanDao womenBeanDao;
    private final MaBeanDao maBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        studentBeanDaoConfig = daoConfigMap.get(StudentBeanDao.class).clone();
        studentBeanDaoConfig.initIdentityScope(type);

        teacherBeanDaoConfig = daoConfigMap.get(TeacherBeanDao.class).clone();
        teacherBeanDaoConfig.initIdentityScope(type);

        manBeanDaoConfig = daoConfigMap.get(ManBeanDao.class).clone();
        manBeanDaoConfig.initIdentityScope(type);

        womenBeanDaoConfig = daoConfigMap.get(WomenBeanDao.class).clone();
        womenBeanDaoConfig.initIdentityScope(type);

        maBeanDaoConfig = daoConfigMap.get(MaBeanDao.class).clone();
        maBeanDaoConfig.initIdentityScope(type);

        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        studentBeanDao = new StudentBeanDao(studentBeanDaoConfig, this);
        teacherBeanDao = new TeacherBeanDao(teacherBeanDaoConfig, this);
        manBeanDao = new ManBeanDao(manBeanDaoConfig, this);
        womenBeanDao = new WomenBeanDao(womenBeanDaoConfig, this);
        maBeanDao = new MaBeanDao(maBeanDaoConfig, this);

        registerDao(UserBean.class, userBeanDao);
        registerDao(StudentBean.class, studentBeanDao);
        registerDao(TeacherBean.class, teacherBeanDao);
        registerDao(ManBean.class, manBeanDao);
        registerDao(WomenBean.class, womenBeanDao);
        registerDao(MaBean.class, maBeanDao);
    }
    
    public void clear() {
        userBeanDaoConfig.clearIdentityScope();
        studentBeanDaoConfig.clearIdentityScope();
        teacherBeanDaoConfig.clearIdentityScope();
        manBeanDaoConfig.clearIdentityScope();
        womenBeanDaoConfig.clearIdentityScope();
        maBeanDaoConfig.clearIdentityScope();
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public StudentBeanDao getStudentBeanDao() {
        return studentBeanDao;
    }

    public TeacherBeanDao getTeacherBeanDao() {
        return teacherBeanDao;
    }

    public ManBeanDao getManBeanDao() {
        return manBeanDao;
    }

    public WomenBeanDao getWomenBeanDao() {
        return womenBeanDao;
    }

    public MaBeanDao getMaBeanDao() {
        return maBeanDao;
    }

}
